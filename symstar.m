function [] = symstar(ntaxa,treename)
%%
% #`SYMSTAR(ntaxa,treename)`
%
% Generates Maple file for species tree <ntaxa>-taxa <treename tree>, with abitrary edge
% lengths `a_i` via the STAR node-numbering algorithm
%   
% `symstar` depends on having two files, one containg an ordered list of
% trees and one containg an ordered list of the probablities of each tree
%
%   ../gene-trees/          <- tree files
%   ../gene-tree-probs/    <- tree probibilities
%
% Gene-trees and gene tree probabilities must be in the same order
% Ghere must be a vector `GTprobs<ntaxa>tax<treename>` in the probability file with the gene-tree
% probabilities 
%   
% The gene trees must be in Newick format, with or without edge lengths,
% they are discarded.
%
% Current performance bottlenecks are the repeated calls to `phytree()`
% which is pretty slow, and is on the inside loop often, also the
% function `starhash.m` which translates numbers to polynomial strings for later
% symbolic work in maple.
%
%  Exception handling need to be implemented.   
%
%  Dependencies: `mstarf.m`, `starhash.m`, `strcelltomaple.m` 
%%



%% setup distmatricies

L = 10.^(0:ntaxa-2);
currentfolder = pwd;
treefile = [currentfolder,'/gene-trees/t',sprintf('%i',ntaxa),'all'];
[dmatricies] = mstarf(treefile,L);

% need to account  when you specify a particular DfromRoot.
% since this changes the polynomials
% or do we care?

%% make symbolic stuff work 
NumTrees = length(dmatricies);

% this loop takes up a lot o time, can we fix it?
symmatricies = cell(1,15);
for kk = 1:NumTrees;
    dim = size(dmatricies{kk},1);
    sym = cell(dim,dim);
   for ii = 1:dim-1
       vv = diag(dmatricies{kk},ii);
      % pause
       for jj = 1:length(vv)
           %ii,jj
           sym{ii+jj,jj} = starhash(dmatricies{kk}(ii+jj,jj));
           sym{jj,ii+jj} = sym{ii+jj,jj};
           %pause
       end
   end
   for ii = 1:dim
       sym{ii,ii} = '0';
   end
   symmatricies{kk} = sym;
end

% Write File to Maple
% This might give too much back to user, does it really need to return the latex?
% Edit to make Maple not display anything when its done 

%% Open output file, if exists already, it will get overwritten.
outfile = [currentfolder,'/symstar-',sprintf('%i',ntaxa),'tax-',treename,'-out.mpl'];
outfid = fopen(outfile,'w');

%% Write File header
fprintf(outfid,'%s\n', '# Written by symstar.m with the following input:');
fprintf(outfid,'%s\n', ['# ntaxa = ',sprintf('%i',ntaxa),' and treename = ',treename]);
fprintf(outfid, '%s\n', ['# Tree Topologies taken from file: ', treefile]);
fprintf(outfid,'%s\n', '# Internal branches have lengths, a_i,  in order of level from root.'); 

%% Print Tree D-matricies
fprintf(outfid,'%s\n','# Distance Matricies for each possible Gene Tree Generated By Star');
fprintf(outfid,'%s\n',['DMatricies := Array(1..',sprintf('%i',NumTrees),'):']);
for ii = 1:NumTrees
    fprintf(outfid,'%s\n\n',['DMatricies[',sprintf('%i',ii),'] := ',strcelltomaple(symmatricies{ii}),':']);
end

%% Execute commands for Species Tree Topo
fprintf(outfid,'%s\n', '# Stuff For Specific Species-Tree Topologies');

probfile = ['gtprobs-',sprintf('%i',ntaxa),'tax-',treename,'.mpl'];
fprintf(outfid, '%s\n','currentdir("',currentfolder,'/gene-tree-probs"):');
fprintf(outfid,'%s\n', ['read "',probfile,'":']);
SMname = ['SM',sprintf('%i',ntaxa),treename];
fprintf(outfid,'%s\n',[SMname,' := Matrix(',sprintf('%i',ntaxa),'): for ii while ii <= ', sprintf('%i',NumTrees), ' do']);
fprintf(outfid,'%s\n',[SMname,' := ',SMname,'+DMatricies[ii]*GTprobs',sprintf('%i',ntaxa),'tax',treename,'[ii] end do:']);
fprintf(outfid,'%s\n',[SMname,' := simplify(',SMname,'):']);
fprintf(outfid,'%s',[SMname,' := collect(',SMname,', [']);
for ii = 1:ntaxa-2
    fprintf(outfid,'%s',['a[',sprintf('%i',ii),'],']);
end
fprintf(outfid,'%s',['a[',sprintf('%i',ntaxa-1),']]']);
fprintf(outfid,'%s\n','):');

%% Displays LateX for each, probably should get cut.
% fprintf(outfid,'%s\n',['for ii from 1 by 1 while ii <= ', sprintf('%i',ntaxa), ' do']);
% fprintf(outfid,'%s\n%',['for jj from ii + 1 by 1 while jj <= ', sprintf('%i',ntaxa),' do']);
% fprintf(outfid,'%s\n\n\n',['latex(sm',sprintf('%i',ntaxa),treename,'(ii,jj) = ',SMname,'(ii,jj))']);
% fprintf(outfid,'%s\n','end do','end do');
fclose(outfid);
end
